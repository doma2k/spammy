MIME-Version: 1.0
Date: Sun, 8 Oct 2023 09:27:17 +0300
Message-ID: <CAK5+0FT48fsLMDSi8uQLfTiy9N0-UOBYtUhfSFVQhyQ+i2vwag@mail.gmail.com>
Subject: New finding: malformed txns never leave mempool
From: Jacob Gadikian <jacob@notional.ventures>
To: zaki@iqlusion.io, security@interchain.io, jehan@informal.systems, 
	syed@interchain.io, Jessy Irwin <jessy@amulet.dev>, Moshe Mizrahi <mo@amulet.dev>, 
	Khanh Nguyen <khanh@notional.ventures>, Alex Sutaru <alex@notional.ventures>, 
	Joe Bowman <joebowman@notional.ventures>, Sheldon Dearr <sdearr1990@gmail.com>
Content-Type: multipart/alternative; boundary="000000000000ad91f406072e90b9"

--000000000000ad91f406072e90b9
Content-Type: text/plain; charset="UTF-8"

I realize that in the present state people aren't actually in the habit of
looking at the repository that we created, but if you see in there there's
a file called mempoolcryptocrew.json.

That contains these, I think.

In order to understand the attack I strongly recommend running it.

Below are Joe's findings

```

@Jacob Gadikian another (albeit reasonably minor) bug - note untested, just
from reading the mempool code:

Notably, the both of these values (checkTx and txPreFilter) use the raw
value of MaxBytes, but should - for correctness - use types.MaxDataBytes()
to ensure the total block size remains within the correct bounds. Failure
to use the correct value allows a malicious actor to fill a network's
mempool with transactions of size `types.MaxDataBytes > x > MaxBytes` which
can never be delivered (as they will never be picked up by ReapMaxTxBytes -
which does use the correct value),.

```

--000000000000ad91f406072e90b9
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

<div dir=3D"auto"><div dir=3D"auto"><br></div><div dir=3D"auto">I realize t=
hat in the present state people aren&#39;t actually in the habit of looking=
 at the repository that we created, but if you see in there there&#39;s a f=
ile called mempoolcryptocrew.json.=C2=A0</div><div dir=3D"auto"><br></div><=
div dir=3D"auto">That contains these, I think.=C2=A0</div><div dir=3D"auto"=
><br></div><div dir=3D"auto">In order to understand the attack I strongly r=
ecommend running it.</div><div dir=3D"auto"><br></div><div dir=3D"auto">Bel=
ow are Joe&#39;s findings</div><div dir=3D"auto"><br></div><div dir=3D"auto=
">```</div><div dir=3D"auto"><br></div>@Jacob Gadikian another (albeit reas=
onably minor) bug - note untested, just from reading the mempool code:<div =
dir=3D"auto"><br></div><div dir=3D"auto">Notably, the both of these values =
(checkTx and txPreFilter) use the raw value of MaxBytes, but should - for c=
orrectness - use types.MaxDataBytes() to ensure the total block size remain=
s within the correct bounds. Failure to use the correct value allows a mali=
cious actor to fill a network&#39;s mempool with transactions of size `type=
s.MaxDataBytes &gt; x &gt; MaxBytes` which can never be delivered (as they =
will never be picked up by ReapMaxTxBytes - which does use the correct valu=
e),.</div><div dir=3D"auto"><br></div><div dir=3D"auto">```</div><div dir=
=3D"auto"><br></div><div dir=3D"auto"><br></div></div>

--000000000000ad91f406072e90b9--